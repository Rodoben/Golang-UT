// Code generated by MockGen. DO NOT EDIT.
// Source: tdd/06_Go_Mock_TestDouble/drivingliscencegenerator (interfaces: RandomNumberGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandomNumberGenerator is a mock of RandomNumberGenerator interface.
type MockRandomNumberGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockRandomNumberGeneratorMockRecorder
}

// MockRandomNumberGeneratorMockRecorder is the mock recorder for MockRandomNumberGenerator.
type MockRandomNumberGeneratorMockRecorder struct {
	mock *MockRandomNumberGenerator
}

// NewMockRandomNumberGenerator creates a new mock instance.
func NewMockRandomNumberGenerator(ctrl *gomock.Controller) *MockRandomNumberGenerator {
	mock := &MockRandomNumberGenerator{ctrl: ctrl}
	mock.recorder = &MockRandomNumberGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandomNumberGenerator) EXPECT() *MockRandomNumberGeneratorMockRecorder {
	return m.recorder
}

// GetRandomNumbers mocks base method.
func (m *MockRandomNumberGenerator) GetRandomNumbers(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomNumbers", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRandomNumbers indicates an expected call of GetRandomNumbers.
func (mr *MockRandomNumberGeneratorMockRecorder) GetRandomNumbers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomNumbers", reflect.TypeOf((*MockRandomNumberGenerator)(nil).GetRandomNumbers), arg0)
}
